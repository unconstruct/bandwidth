// _preboot.scss
// Variables and mixins

// Variables
// --------------------------------------------------

//Descriptive colors
$bg-lightgray:			#f9f9f9;
$bg-white:				#fefefe;
$detail-midgray:		#707070;
$base-darkgray:			#222222;
$strong-black:			#181818;
$detail-lightgray:		#aaaaaa;
$accent-blue:			#007fd0;
$accent-yellow:			#ffc300;

//Functional colors
$a:						$bg-lightgray;
$b:						$bg-white;
$c:						$detail-midgray;
$d:						$base-darkgray;
$e:						$strong-black;
$f:						$detail-lightgray;
$primary: 				$accent-blue;
$secondary: 			$accent-yellow;

//Fonts
$sans:					"Helvetica Neue", Helvetica, Arial, Verdana, Tahoma, sans-serif;
$serif:					Merriweather, Georgia, Times, "Times New Roman", serif;
$serif-default:			Georgia, Times, "Times New Roman", serif;
$mono:					Consolas, Monaco, "Courier New", Courier, monospace;

//Break points
$one:					600px;
$two:					900px;

//Grid
$width:					994px;
$col:					82px;
$gut:					32px;
$with-sidebar:			percentage(($col*6+$gut*5)/$width); //.frame
$sidebar:				percentage(($col*2+$gut*4)/$width); //.frame

//Baseline
$base:					22px;
$line:					1.65;

//Element
$rule:					1px solid darken($a, 4);
$indent:				1.5em;

// Mixins
// --------------------------------------------------

//Disable selection
@mixin no-select {
	-webkit-user-select: none;
	   -moz-user-select: none;
	   	-ms-user-select: none;
	   		user-select: none;
}

//Hyphens
@mixin type-hyphens($hyphens: auto) {
	-webkit-hyphens: $hyphens;
	   -moz-hyphens: $hyphens;
	   		hyphens: $hyphens;
}

//Hyphenate limit
@mixin hyphen-before($before: 3) {
	-webkit-hyphenate-limit-before: $before;
}

//Hyphenate limit
@mixin hyphen-limit($limit: 1) {
	-webkit-hyphenate-limit-lines: $limit;
	   -moz-hyphenate-limit-lines: $limit;
	    -ms-hyphenate-limit-lines: $limit;
	    	hyphenate-limit-lines: $limit;
}

//Border radius
@mixin border-radius($radius: 2px) {
	-webkit-border-radius: $radius;
		 -moz-border-radius: $radius;
			  border-radius: $radius;
}

// Box shadow
@mixin box-shadow($shadow: 0 0 2px rgba(0,0,0,0.08)) {
	-webkit-box-shadow: $shadow;
	   -moz-box-shadow: $shadow;
	   		box-shadow: $shadow;
}

// Inner box shadow
@mixin inner-box-shadow($shadow-inner: inset 0 1px 2px rgba(0,0,0,0.08)) {
	-webkit-box-shadow: $shadow-inner;
	   -moz-box-shadow: $shadow-inner;
	   		box-shadow: $shadow-inner;
}

//Media queries
@mixin for($media) {
	@if $media == small-screens {
		@media screen and (min-width: $one) { @content; }
	}
	@else if $media == medium-screens {
		@media screen and (min-width: $two) { @content; }
	}
}

//Rem generator
$baseline-px: 18px;

@mixin rem($property, $px-values) {
	// Convert the baseline into rems
	$baseline-rem: $baseline-px / 1rem;
	// Print the first line in pixel values
	#{$property}: $px-values;
	// If there is only one (numeric) value, return the property/value line for it.
	@if type-of($px-values) == "number" {
		#{$property}: $px-values / $baseline-rem; }
	@else {
		// Create an empty list that we can dump values into
		$rem-values: unquote("");
		@each $value in $px-values {
			// If the value is zero, return 0
			@if $value == 0 {
				$rem-values: append($rem-values, $value); }
			@else {
				$rem-values: append($rem-values, $value / $baseline-rem); } }
		// Return the property and its list of converted values
		#{$property}: $rem-values; } }

/*---------------------------------------------------------
 Extends (_preboot.scss)
-------------------------------------------------------- */

.clear {
	zoom: 1;
	&:before,
	&:after {
		display: table;
		content: "";
	}
	&:after {
		clear: both;
	}
}
.small-type {
	@include for(medium-screens) {
		@include rem('font-size', 15px);
	}
	color: $c;
	line-height: 1.55;
	@include rem('font-size', 16px);
}
.serif-type {
	font-family: $serif;
	font-weight: 900;
}
.break {
	word-wrap: break-word;
	word-break: hyphenate;
}
.box-size {
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	   		box-sizing: border-box;
}